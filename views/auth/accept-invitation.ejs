<style>
  body {
    font-size: 16px;
  }

  form label {
    display: block;
    font-weight: 700;
    margin-bottom: 6px;
  }

  form input[type="text"] {
    display: block;
    height: 36px;
    margin-bottom: 8px;
    padding: 0 36px 0 10px;
    border: 2px solid #cccccc;
    font-size: 16px;
    letter-spacing: 1px;
  }

  form ul.helper-text {
    display: block;
    margin-top: 6px;
    font-size: 12px;
    line-height: 22px;
    color: #808080;
  }

  form ul.helper-text li.valid {
    color: #1fd34a;
  }

  form.valid input {
    border: 2px solid #1fd34a;
  }
</style>

<div style="max-width: 50%">

  <h1 style="text-align: center; color: #5c005c">
    <div style="font-size: 0.5em;">You've been invited to Vendex</div>
    Create your account
  </h1>

  <form action="/auth/invitations/accept" method="post">
    <label for="name">
      Name
      <input type="text" name="name" id="name"/>
    </label>

    <label for="email">
      Email
      <input type="email" name="email" id="email"/>
    </label>

    <div style="display: flex">
      <div style="flex-grow: 1;">
        <label for="password">
          Choose a password
          <input type="password" name="password" id="password"/>
        </label>

        <label for="confirmPassword">
          Choose a password
          <input type="password" name="confirmPassword" id="confirmPassword"/>
        </label>
      </div>
      <ul class="helper-text" style="position: absolute; left: 75%;">
        <li class="length">Must be at least 8 characters long.</li>
        <li class="lowercase">Must contain a lowercase letter.</li>
        <li class="uppercase">Must contain an uppercase letter.</li>
        <li class="special">Must contain a number or special character.</li>
      </ul>
    </div>

    <input type="text" name="code" id="code" style="display: none"/>

    <input type="submit" value="Create account" style="width: 100%; padding: 1em; background-color: #5c005c; color: white; font-weight: bold;"/>
  </form>

</div>

<script>
  (function () {
    let { search } = location;
    if (search.startsWith('?')) {
      search = search.replace('?', '');
    }

    const params = search.split('&')
      .reduce((memo, pair) => {
        const [key, value] = pair.split('=');
        memo[decodeURI(key)] = decodeURI(value);
        return memo;
      }, {});

    document.getElementById('code').setAttribute('value', params.code);
  })();
</script>
<script>
  // Shamelessly ripped from https://codepen.io/mattlitzinger/pen/vEpEaK
  (function () {
    var password = document.getElementById('password');

    var helperText = {
      charLength: document.querySelector('.helper-text .length'),
      lowercase: document.querySelector('.helper-text .lowercase'),
      uppercase: document.querySelector('.helper-text .uppercase'),
      special: document.querySelector('.helper-text .special')
    };

    var pattern = {
      charLength: function () {
        if (password.value.length >= 8) {
          return true;
        }
      },
      lowercase: function () {
        var regex = /^(?=.*[a-z]).+$/; // Lowercase character pattern

        if (regex.test(password.value)) {
          return true;
        }
      },
      uppercase: function () {
        var regex = /^(?=.*[A-Z]).+$/; // Uppercase character pattern

        if (regex.test(password.value)) {
          return true;
        }
      },
      special: function () {
        var regex = /^(?=.*[0-9_\W]).+$/; // Special character or number pattern

        if (regex.test(password.value)) {
          return true;
        }
      }
    };

    // Listen for keyup action on password field
    password.addEventListener('keyup', function () {
      // Check that password is a minimum of 8 characters
      patternTest(pattern.charLength(), helperText.charLength);

      // Check that password contains a lowercase letter
      patternTest(pattern.lowercase(), helperText.lowercase);

      // Check that password contains an uppercase letter
      patternTest(pattern.uppercase(), helperText.uppercase);

      // Check that password contains a number or special character
      patternTest(pattern.special(), helperText.special);

      // Check that all requirements are fulfilled
      if (hasClass(helperText.charLength, 'valid') &&
        hasClass(helperText.lowercase, 'valid') &&
        hasClass(helperText.uppercase, 'valid') &&
        hasClass(helperText.special, 'valid')
      ) {
        addClass(password.parentElement, 'valid');
      }
      else {
        removeClass(password.parentElement, 'valid');
      }
    });

    function patternTest(pattern, response) {
      if (pattern) {
        addClass(response, 'valid');
      }
      else {
        removeClass(response, 'valid');
      }
    }

    function addClass(el, className) {
      if (el.classList) {
        el.classList.add(className);
      }
      else {
        el.className += ' ' + className;
      }
    }

    function removeClass(el, className) {
      if (el.classList)
        el.classList.remove(className);
      else
        el.className = el.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
    }

    function hasClass(el, className) {
      if (el.classList) {
        console.log(el.classList);
        return el.classList.contains(className);
      }
      else {
        new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);
      }
    }

  })();
</script>
