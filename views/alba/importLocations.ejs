<h4>Alba > Import Locations</h4>
<blockquote>
  Setup relationships with other congregations by
  <a href="/ui/congregations">adding</a> the congregation, then <a href="/ui/congregations/<%= congregationId %>">edit this one</a> to link them.
  You should only import locations for congregations with whom you've agreed to share locations.
</blockquote>
<blockquote>
  Importing locations from Alba can take a long time to complete the initial import. Estimate about 1-2 seconds per location.
  Note that you may see an import error if it takes more than 30s to complete; It is still running in the background.
</blockquote>
<blockquote>
  If an address exists more than once in the import data, the last one wins.
</blockquote>
<form id="alba-location-import">
  <div class="row">
    <label for="alba-export-tsv">
      Paste ALBA location export from <a target="_blank" href="https://www.mcmxiv.com/alba/addresses">Alba</a>:
      <textarea id="alba-export-tsv"></textarea>
    </label>
  </div>

  <div class="row">
    <button id="alba-submit">Import</button>
  </div>

  <div class="progress hide">
    <div class="indeterminate"></div>
  </div>

  <div id="error-message"></div>
</form>


<script>
  const submitEl = document.getElementById('alba-submit');

  submitEl.addEventListener('click', (e) => {
    e.preventDefault();

    submitEl.setAttribute('disabled', 'disabled');
    const progressEl = document.querySelector('.progress');
    const errorMessageEl = document.getElementById('error-message');

    progressEl.classList.remove('hide');

    const body = document.getElementById('alba-export-tsv').value;
    fetch('/alba/locations', {
      body,
      method: 'POST',
      headers: new Headers({
        'congregationid': window.localStorage.getItem('congregationId'),
        'content-type': 'text/plain',
        'content-length': body.length,
      }),
      credentials: 'same-origin',
    })
      .then((response) => {
        progressEl.classList.add('hide');
        submitEl.removeAttribute('disabled');

        if (response.ok) {
          Materialize.toast('Locations successfully imported.', 5000);
          return;
        }

        Materialize.toast('Error importing locations.', 5000);
        return response.text().then(x => errorMessageEl.innerText);
      })
      .catch((err) => {
        submitEl.removeAttribute('disabled');

        Materialize.toast(err, 5000);
      });
  })
</script>
