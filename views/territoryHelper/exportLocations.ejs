<h4>Territory Helper > Exports</h4>

<div>
  <button id="create-export" class="waves-effect waves-light btn">
    <i class="material-icons right">file_download</i> Download a new export
  </button>
  <div class="progress hide" id="spinner">
    <div class="indeterminate"></div>
  </div>
</div>


<blockquote>Empty exports are excluded from this list</blockquote>

<table style="white-space: nowrap;" class="bordered highlight responsive-table">
  <thead>
  <tr>
    <th>Timestamp</th>
    <th>New</th>
    <th>Updated</th>
    <th>Deleted</th>
    <th></th>
  </tr>
  </thead>
  <tbody id="exports-list">
  <% exports.map(({ exportActivityId, timestamp, summary }) => { %>
  <tr>
    <td><a href="/ui/territoryhelper/exports/<%= exportActivityId %>"><%= moment(timestamp).format('L LTS') %></a></td>
    <td><%= summary ? summary.inserts : 'N/A' %></td>
    <td><%= summary ? summary.updates : 'N/A' %></td>
    <td><%= summary ? summary.deletes : 'N/A' %></td>
    <td><a href="/ui/territoryhelper/exports/<%= exportActivityId %>/download">Download</a></td>
  </tr>
  <% }) %>
  </tbody>
</table>

<script>
  const el = document.getElementById('create-export');
  const spinner = document.getElementById('spinner');

  el.addEventListener('click', async (e) => {
    e.preventDefault();
    spinner.classList.remove('hide');
    el.setAttribute('disabled', 'disabled');

    const response = await fetch(`/territoryhelper/locations?format=xlsx`, { credentials: 'same-origin' });
    if (!response.ok) {
      Materialize.toast('Error creating export.', 5000);
      return;
    }

    const downloadUrl = response.headers.get('location');
    const pingDownload = () => {
      fetch(downloadUrl, { credentials: 'same-origin' })
        .then(async (result) => {
          if (result.status === 204) {
            window.setTimeout(pingDownload, 2500);
          } else if (result.ok) {
            const a = document.createElement('a');
            a.href = window.URL.createObjectURL(await result.blob());
            a.download = result.headers.get('x-vendex-filename');
            a.click();

            window.location.reload();
          } else {
            Materialize.toast('Error downloading export.', 5000);
            spinner.classList.add('hide');
            el.removeAttribute('disabled');
          }
        })
        .catch(err => {
          Materialize.toast('Error downloading export.', 5000);
          console.error(err);
          spinner.classList.add('hide');
          el.removeAttribute('disabled');
        });
    };

    pingDownload();
  });
</script>
